/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package tourify.View;

import java.sql.SQLException;
import java.util.Collection;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import tourify.Controller.BookingDao;
import tourify.Controller.BookingTable;
import tourify.Controller.UserDao;
import tourify.Model.Booking;
import tourify.Model.Traveller;
import tourify.View.Billpage;

/**
 *
 * @author lenevo
 */
public class BookingsDashboard1 extends javax.swing.JPanel {

    Boolean hotelyn = false;

    /**
     * Creates new form BookingsDashboard1
     */
    public BookingsDashboard1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        guideField = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookingsTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        billButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        addBooking = new javax.swing.JButton();
        deselectButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        dateField = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        roomNoField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tpField = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        travellerNoField = new javax.swing.JTextField();
        guideTextField = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        transportField = new javax.swing.JComboBox<>();
        roomTypeField = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        phNumField = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        hotelynCheck = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();

        try{
            HashMap<Integer, String> guideHash = UserDao.getGuideHash();
            Collection<String> values = guideHash.values();
            String[] guideArr = values.toArray(new String[0]);
            guideField.setModel(new javax.swing.DefaultComboBoxModel<>(guideArr));
        }catch(SQLException e){
            String[] guideArr = {"Error"};
            guideField.setModel(new javax.swing.DefaultComboBoxModel<>(guideArr));
        }
        guideField.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                guideFieldItemStateChanged(evt);
            }
        });
        guideField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guideFieldActionPerformed(evt);
            }
        });

        setMaximumSize(new java.awt.Dimension(911, 1025));
        setMinimumSize(new java.awt.Dimension(911, 1025));
        setPreferredSize(new java.awt.Dimension(911, 1025));

        try{
            bookingsTable.setModel(new DefaultTableModel(BookingTable.getBookings1(),new String[] {"ID","Name","Email","Tour Package","No of Traveller","Contact","Transport","Date","Guide","Hotel","Room type","No of room","Tour Package Id", "Guide Id"})
                {
                    public boolean isCellEditable(int row, int column) {
                        return false;
                    }
                }

            );
        }
        catch(SQLException e){
            e.printStackTrace();
            bookingsTable.setModel(new DefaultTableModel(new Object[][]{},new String[] {"ID","Name","Email","Tour Package","No of Traveller","Contact","Transport","Date","Guide","Hotel","Room type","No of room","Tour Package Id", "Guide Id"}));
        }
        bookingsTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bookingsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookingsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bookingsTable);

        billButton.setBackground(new java.awt.Color(0, 102, 102));
        billButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tourify/View/bill.png"))); // NOI18N
        billButton.setText("Bill");
        billButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                billButtonMouseClicked(evt);
            }
        });

        updateButton.setBackground(new java.awt.Color(0, 102, 102));
        updateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tourify/View/updates.png"))); // NOI18N
        updateButton.setText("Update bookings");
        updateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateButtonMouseClicked(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(0, 102, 102));
        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tourify/View/delete.png"))); // NOI18N
        deleteButton.setText("Delete Booking");
        deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteButtonMouseClicked(evt);
            }
        });
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        addBooking.setBackground(new java.awt.Color(0, 102, 102));
        addBooking.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tourify/View/add.png"))); // NOI18N
        addBooking.setText("Add booking");
        addBooking.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addBookingMouseClicked(evt);
            }
        });
        addBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBookingActionPerformed(evt);
            }
        });

        deselectButton.setBackground(new java.awt.Color(0, 102, 102));
        deselectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tourify/View/choice.png"))); // NOI18N
        deselectButton.setText("Deselect");
        deselectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deselectButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(updateButton)
                .addGap(49, 49, 49)
                .addComponent(billButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(deselectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(deselectButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                        .addComponent(addBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(billButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setText("Tour Package id");

        jLabel9.setText("Date");

        roomNoField.setEnabled(false);
        roomNoField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomNoFieldActionPerformed(evt);
            }
        });

        jLabel6.setText("No of rooms");
        jLabel6.setAutoscrolls(true);
        jLabel6.setFocusable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(tpField, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(129, 129, 129)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(124, 124, 124)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(roomNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(210, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel9)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tpField, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(roomNoField)
                    .addComponent(dateField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel8.setText("Guide");

        jLabel3.setText("No of people");

        travellerNoField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                travellerNoFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(travellerNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(119, 119, 119)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(guideTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(travellerNoField, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(guideTextField))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jLabel1.setText("Email");

        jLabel4.setText("Types of rooms");

        emailField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailFieldActionPerformed(evt);
            }
        });

        transportField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<select one>", "Bus", "Flight" }));

        roomTypeField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<select one>", "Queen Size Bed", "Twin Size Bed" }));
        roomTypeField.setEnabled(false);
        roomTypeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomTypeFieldActionPerformed(evt);
            }
        });

        jLabel5.setText("Transportation");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(transportField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(120, 120, 120)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roomTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(209, 209, 209))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transportField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        jLabel17.setText("Full Name");

        hotelynCheck.setText("Hotel");
        hotelynCheck.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hotelynCheckMouseClicked(evt);
            }
        });
        hotelynCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotelynCheckActionPerformed(evt);
            }
        });

        jLabel2.setText("Phone number");

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(127, 127, 127)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(phNumField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(120, 120, 120)
                        .addComponent(hotelynCheck))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hotelynCheck)
                    .addComponent(phNumField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 918, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 41, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 404, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void emailFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailFieldActionPerformed

    private void travellerNoFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_travellerNoFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_travellerNoFieldActionPerformed

    private void roomTypeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomTypeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomTypeFieldActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void addBookingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBookingMouseClicked
        // TODO add your handling code here:
        //assigning variable to values got from form fields
        int roomNoValue;
        String roomTypeValue;
        String nameValue = nameField.getText();
        String phNumValue = phNumField.getText();
        String hotelynValue = hotelyn ? "Yes" : "No";
        if (hotelyn) {
            roomNoValue = Integer.parseInt(roomNoField.getText());
            roomTypeValue = String.valueOf(roomTypeField.getSelectedItem());
        } else {
            roomTypeValue = "None";
            roomNoValue = 0;
        }
        String emailValue = emailField.getText();
        String transportValue = String.valueOf(transportField.getSelectedItem());
        if (nameValue.equals("")
                || phNumValue.equals("")
                || emailValue.equals("")
                || transportValue.equals("<select one>")
                || tpField.getText().equals("")
                || dateField == null
                || travellerNoField.getText().equals("")
                || guideTextField.getText().equals("")) {

            JOptionPane.showMessageDialog(null, "Insufficient credentials.", "Error", JOptionPane.INFORMATION_MESSAGE);
        } else if (phNumValue.length() != 10) {
            JOptionPane.showMessageDialog(null, "Phone number must be of ten digits", "Error", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int tourPackageIdValue = Integer.parseInt(tpField.getText());
            Date date = dateField.getDate();
            int travellerNoValue = Integer.parseInt(travellerNoField.getText());
            int guideIdValue = Integer.parseInt(guideTextField.getText());
            Traveller travellerInput = new Traveller(nameValue, emailValue, phNumValue, travellerNoValue);
            Booking bookingInput = new Booking(date, hotelynValue, roomNoValue, roomTypeValue, tourPackageIdValue, guideIdValue, "Unpaid", transportValue);//hardcoded

            //calling add function
            try {
                BookingDao.addBooking(bookingInput, travellerInput);
                nameField.setText("");
                phNumField.setText("");
                hotelynCheck.setSelected(false);
                roomNoField.setText("");
                tpField.setText("");
                travellerNoField.setText("");
                guideTextField.setText("");
                dateField.setDate(null);
                emailField.setText("");
                transportField.setSelectedItem("<select one>");
                roomTypeField.setSelectedItem("<select one>");

                try {
                    bookingsTable.setModel(new DefaultTableModel(BookingTable.getBookings1(), new String[]{"ID", "Name", "Email", "Tour Package", "No of Traveller", "Contact", "Transport", "Date", "Guide", "Hotel", "Room type", "No of room", "Tour Package Id", "Guide Id"}) {
                        public boolean isCellEditable(int row, int column) {
                            return false;
                        }
                    });
                } catch (SQLException e) {
                    e.printStackTrace();
                    bookingsTable.setModel(new DefaultTableModel(new Object[][]{}, new String[]{"ID", "Name", "Email", "Tour Package", "No of Traveller", "Contact", "Transport", "Date", "Guide", "Hotel", "Room type", "No of room", "Tour Package Id", " Guide Id"}));
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Unaccessible foreign keys", "Error", JOptionPane.INFORMATION_MESSAGE);
                Logger.getLogger(BookingsDashboard1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_addBookingMouseClicked

    private void roomNoFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomNoFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomNoFieldActionPerformed

    private void hotelynCheckMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hotelynCheckMouseClicked

        hotelyn = hotelynCheck.isSelected();
    }//GEN-LAST:event_hotelynCheckMouseClicked

    private void guideFieldItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_guideFieldItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_guideFieldItemStateChanged

    private void guideFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guideFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_guideFieldActionPerformed

    private void updateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateButtonMouseClicked
        // TODO add your handling code here:

        DefaultTableModel tModel = (DefaultTableModel) bookingsTable.getModel();

        int selectedRow = bookingsTable.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Select a row first", "Error", JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                int roomNoValue;
                String roomTypeValue;
                String nameValue = nameField.getText();
                String phNumValue = phNumField.getText();
                String emailValue = emailField.getText();
                String transportValue = String.valueOf(transportField.getSelectedItem());
                String hotelynValue = hotelyn ? "Yes" : "No";
                if (hotelyn) {
                    roomNoValue = Integer.parseInt(roomNoField.getText());
                    roomTypeValue = String.valueOf(roomTypeField.getSelectedItem());
                } else {
                    roomTypeValue = "None";
                    roomNoValue = 0;
                }
                if (nameValue.equals("")
                        || phNumValue.equals("")
                        || emailValue.equals("")
                        || transportValue.equals("<select one>")
                        || tpField.getText().equals("")
                        || dateField == null
                        || travellerNoField.getText().equals("")
                        || guideTextField.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Insufficient credentials.", "Error", JOptionPane.INFORMATION_MESSAGE);
                } else if (phNumValue.length() != 10) {
                    JOptionPane.showMessageDialog(null, "Phone number must be of ten digits", "Error", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    int tourPackageIdValue = Integer.parseInt(tpField.getText());
                    Date date = dateField.getDate();
                    int travellerNoValue = Integer.parseInt(travellerNoField.getText());
                    int guideIdValue = Integer.parseInt(guideTextField.getText());
                    int idValue = ((Integer) tModel.getValueAt(bookingsTable.getSelectedRow(), 0));

                    Traveller travellerInput = new Traveller(nameValue, emailValue, phNumValue, travellerNoValue);
                    Booking bookingInput = new Booking(date, hotelynValue, roomNoValue, roomTypeValue, tourPackageIdValue, guideIdValue, "Unpaid", transportValue);//hardcoded
                    bookingInput.setBooking_id(idValue);
                    BookingDao.editBooking(bookingInput, travellerInput);
                }

            } catch (SQLException ex) {
                Logger.getLogger(BookingsDashboard1.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                bookingsTable.setModel(new DefaultTableModel(BookingTable.getBookings1(), new String[]{"ID", "Name", "Email", "Tour Package", "No of Traveller", "Contact", "Transport", "Date", "Guide", "Hotel", "Room type", "No of room", "Tour Package Id", "Guide Id"}) {
                    public boolean isCellEditable(int row, int column) {
                        return false;
                    }
                });
            } catch (SQLException ex) {
                Logger.getLogger(BookingsDashboard1.class.getName()).log(Level.SEVERE, null, ex);
            }
            nameField.setText("");
            phNumField.setText("");
            hotelynCheck.setSelected(false);
            roomNoField.setText("");
            tpField.setText("");
            travellerNoField.setText("");
            guideTextField.setText("");
            dateField.setDate(null);
            emailField.setText("");
            transportField.setSelectedItem("<select one>");
            roomTypeField.setSelectedItem("<select one>");

        }

    }//GEN-LAST:event_updateButtonMouseClicked

    private void bookingsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookingsTableMouseClicked
        // TODO add your handling code here:
        // TODO add your handling code here:
        //        {"ID","Name","Email","Tour Package","No of Traveller","Contact","Transport","Date","Guide","Hotel","Room type","No of room"}

        DefaultTableModel tModel = (DefaultTableModel) bookingsTable.getModel();
        String tname = tModel.getValueAt(bookingsTable.getSelectedRow(), 1).toString();
        String tEmail = tModel.getValueAt(bookingsTable.getSelectedRow(), 2).toString();

        String tTravellerNo = (String) tModel.getValueAt(bookingsTable.getSelectedRow(), 4);
        String tTravellerPhNo = tModel.getValueAt(bookingsTable.getSelectedRow(), 5).toString();
        String tTransport = tModel.getValueAt(bookingsTable.getSelectedRow(), 6).toString();
        Date tDate = (java.util.Date) tModel.getValueAt(bookingsTable.getSelectedRow(), 7);
        Boolean tHotelyn = tModel.getValueAt(bookingsTable.getSelectedRow(), 9).toString().equals("Yes");
        String tRoomType = tModel.getValueAt(bookingsTable.getSelectedRow(), 10).toString();
        String tNoofRoom = tModel.getValueAt(bookingsTable.getSelectedRow(), 11).toString();
        String tTpID = tModel.getValueAt(bookingsTable.getSelectedRow(), 12).toString();
        String tGuideId = tModel.getValueAt(bookingsTable.getSelectedRow(), 13).toString();

        nameField.setText(tname);
        emailField.setText(tEmail);
        travellerNoField.setText(tTravellerNo);
        phNumField.setText(tTravellerPhNo);
        transportField.setSelectedItem(tTransport);
        dateField.setDate(tDate);
        hotelynCheck.setSelected(tHotelyn);
        roomTypeField.setSelectedItem(tRoomType);
        roomNoField.setText(tNoofRoom);
        tpField.setText(tTpID);
        guideTextField.setText(tGuideId);


    }//GEN-LAST:event_bookingsTableMouseClicked

    private void deleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tModel = (DefaultTableModel) bookingsTable.getModel();
        int selectedRow = bookingsTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Must choose a row before deletion", "Error", JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                int idValue = ((Integer) tModel.getValueAt(bookingsTable.getSelectedRow(), 0));
                BookingDao.deleteBooking(idValue);
            } catch (SQLException ex) {
                Logger.getLogger(BookingsDashboard1.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                bookingsTable.setModel(new DefaultTableModel(BookingTable.getBookings1(), new String[]{"ID", "Name", "Email", "Tour Package", "No of Traveller", "Contact", "Transport", "Date", "Guide", "Hotel", "Room type", "No of room", "Tour Package Id", "Guide Id"}) {
                    public boolean isCellEditable(int row, int column) {
                        return false;
                    }
                });
            } catch (SQLException ex) {
                Logger.getLogger(BookingsDashboard1.class.getName()).log(Level.SEVERE, null, ex);

            }
            nameField.setText("");
            phNumField.setText("");
            hotelynCheck.setSelected(false);
            roomNoField.setText("");
            tpField.setText("");
            travellerNoField.setText("");
            guideTextField.setText("");
            dateField.setDate(null);
            emailField.setText("");
            transportField.setSelectedItem("<select one>");
            roomTypeField.setSelectedItem("<select one>");
        }
    }//GEN-LAST:event_deleteButtonMouseClicked

    private void deselectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deselectButtonActionPerformed

        bookingsTable.clearSelection();
        nameField.setText("");
        phNumField.setText("");
        hotelynCheck.setSelected(false);
        roomNoField.setText("");
        tpField.setText("");
        travellerNoField.setText("");
        guideTextField.setText("");
        dateField.setDate(null);
        emailField.setText("");
        transportField.setSelectedItem("<select one>");
        roomTypeField.setSelectedItem("<select one>");


    }//GEN-LAST:event_deselectButtonActionPerformed

    private void hotelynCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotelynCheckActionPerformed
        if (hotelynCheck.isSelected()) {
            roomTypeField.setEnabled(true);
            roomNoField.setEnabled(true);

        } else {
            roomTypeField.setEnabled(false);
            roomNoField.setEnabled(false);
        }


    }//GEN-LAST:event_hotelynCheckActionPerformed

    private void addBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBookingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addBookingActionPerformed

    private void billButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billButtonMouseClicked
        // TODO add your handling code here:

        Billpage bp = new Billpage();
        bp.setVisible(true);
    }//GEN-LAST:event_billButtonMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBooking;
    private javax.swing.JButton billButton;
    private javax.swing.JTable bookingsTable;
    private com.toedter.calendar.JDateChooser dateField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton deselectButton;
    private javax.swing.JTextField emailField;
    private javax.swing.JComboBox<String> guideField;
    private javax.swing.JTextField guideTextField;
    private javax.swing.JCheckBox hotelynCheck;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField phNumField;
    private javax.swing.JTextField roomNoField;
    private javax.swing.JComboBox<String> roomTypeField;
    private javax.swing.JTextField tpField;
    private javax.swing.JComboBox<String> transportField;
    private javax.swing.JTextField travellerNoField;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
